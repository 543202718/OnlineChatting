/*
 * The MIT License
 *
 * Copyright 2019 Wang.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package client;

import javax.swing.DefaultListModel;

/**
 *
 * @author Wang
 */
public class SystemMessageFrame extends javax.swing.JFrame {
    private static SystemMessageFrame instance;
    private final DefaultListModel<Message> model=new DefaultListModel<>();
    /**
     * Creates new form SystemMessageFrame
     */
    private SystemMessageFrame() {
        initComponents();
        jList1.setModel(model);
    }
    
    public static SystemMessageFrame getInstance(){
        if (instance==null){
            instance=new SystemMessageFrame();
        }
        return instance;
    }
    /**
     * 更新系统消息列表
     */
    public void update(){
        model.removeAllElements();
        int n=MessageManager.systemMessageList.size();
        for (int i=n-1;i>=0;i--){
            Message msg=MessageManager.systemMessageList.get(i);
            if (msg!=null){                
                model.addElement(msg);
            }          
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 36)); // NOI18N
        jLabel1.setText("系统消息");

        jList1.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jButton1.setText("接受");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jButton2.setText("拒绝");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addComponent(jButton1)
                                .addGap(110, 110, 110)
                                .addComponent(jButton2)))
                        .addGap(0, 170, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * JList的点击事件，根据消息类型控制接受和拒绝按钮的可用性
 * @param evt 
 */
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        int i=jList1.getSelectedIndex();
        if (i<0) return;
        Message msg=model.get(i);
        switch(msg.getType()){
            case 2:
            case 6:     jButton1.setEnabled(true);
                        jButton2.setEnabled(true);
                        break;
            default:    jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
        }
    }//GEN-LAST:event_jList1MouseClicked
/**
 * 接受
 * @param evt 
 */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int i=jList1.getSelectedIndex();
        if (i<0) return;
        Message msg=model.get(i);
        switch(msg.getType()){
            case 2:     Client.sendMessage("Message 3 "+UserManager.getClient().getID()+" "+msg.getSender()+" Accept");
                        msg.setType(-1);
                        msg.setContent("您接受了"+UserManager.getUser(msg.getSender())+"的好友请求");
                        jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
                        break;
            case 6:     Client.sendMessage("Message 7 "+UserManager.getClient().getID()+" "+msg.getSender()+" Accept");
                        msg.setType(-1);
                        msg.setContent("您接受了"+GroupManager.getGroup(msg.getSender())+"的入群邀请");
                        jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
                        break;
            default:    jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
/**
 * 拒绝
 * @param evt 
 */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int i=jList1.getSelectedIndex();
        if (i<0) return;
        Message msg=model.get(i);
        switch(msg.getType()){
            case 2:     Client.sendMessage("Message 4 "+UserManager.getClient().getID()+" "+msg.getSender()+" Accept");
                        msg.setType(-1);
                        msg.setContent("您拒绝了"+UserManager.getUser(msg.getSender())+"的好友请求");
                        jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
                        break;
            case 6:     Client.sendMessage("Message 8 "+UserManager.getClient().getID()+" "+msg.getSender()+" Accept");
                        msg.setType(-1);
                        msg.setContent("您拒绝了"+GroupManager.getGroup(msg.getSender())+"的入群邀请");
                        jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
                        break;
            default:    jButton1.setEnabled(false);
                        jButton2.setEnabled(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SystemMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SystemMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SystemMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SystemMessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SystemMessageFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<Message> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
