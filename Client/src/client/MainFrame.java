/*
 * The MIT License
 *
 * Copyright 2019 Wang.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package client;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.Image;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Wang
 */
public class MainFrame extends javax.swing.JFrame {
    private static MainFrame instance;
    private final DefaultListModel<Chatter> model=new DefaultListModel<>();
    private ImageIcon BOY,GIRL;
    private int channel=0;//0代表消息界面，1代表联系人界面，2代表群聊界面
    public ChatPanel chatPanel=null;
    /**
     * Creates new form MainFrame
     */
    private MainFrame() {
        initComponents();
        setup();
    }
    /**
     * 初始设置
     */
    private void setup(){
        int iconSize=100;
        jButton7.setVisible(false);
        jPanel1.setLayout(new BorderLayout());
        jList.setFont(new Font("楷体",Font.PLAIN,24));
        jList.setModel(model);
        jList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList);
        ImageIcon rawIcon=new ImageIcon("pic/boy.png");
        BOY=new ImageIcon(rawIcon.getImage().getScaledInstance(iconSize,iconSize,Image.SCALE_DEFAULT));
        rawIcon=new ImageIcon("pic/girl.png");
        GIRL=new ImageIcon(rawIcon.getImage().getScaledInstance(iconSize,iconSize,Image.SCALE_DEFAULT));    
    }
    
    /**
     * 单例模式获取实例
     * @return 实例
     */
    public static MainFrame getInstance(){
        if (instance==null){
            instance=new MainFrame();
        }
        return instance;
    }
    
    /**
     * 更新用户的头像和昵称
     */
    public void updateAvatar(){
        User user=UserManager.getClient();
        jLabel2.setText(user.getName());
        if (user.getSex().equals("男")){
            jButton1.setIcon(BOY);
        }
        else {
            jButton1.setIcon(GIRL);
        }
    }
    /**
     * 更新消息列表
     */
    public void updateMessage(){
        if (channel!=0) return;
        model.removeAllElements();
        for (String s: Client.addressBook.getFriendList()){
            User user=UserManager.getUser(s);
            if (user!=null){
                model.addElement(user);
            }                   
        }
        for (String s: Client.addressBook.getGroupList()){
            Group group=GroupManager.getGroup(s);
            if (group!=null){
                model.addElement(group);
            }                   
        }        
    }
    /**
     * 更新联系人列表
     */
    public void updateAddressBook(){     
        if (channel!=1) return;
        model.removeAllElements();
        for (String s: Client.addressBook.getFriendList()){
            User user=UserManager.getUser(s);
            if (user!=null){
                model.addElement(user);
            }                   
        }
    }
    /**
     * 更新群聊列表
     */
    public void updateGroup(){
        if (channel!=2) return;
        model.removeAllElements();
        for (String s: Client.addressBook.getGroupList()){
            Group group=GroupManager.getGroup(s);
            if (group!=null){
                model.addElement(group);
            }                   
        }
    }
    
    /**
     * 更新聊天窗体
     */
    public void updateChatPanel(){
        if (chatPanel!=null){
            chatPanel.updateMessage();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList);

        jButton2.setText("聊天消息");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("微软雅黑", 1, 30)); // NOI18N
        jLabel1.setText("消息");

        jButton3.setText("联系人");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("退 出");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("昵称");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
        );

        jButton5.setText("群 聊");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jButton7.setText("+");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton6.setText("系统消息");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButton7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * 退出
 * @param evt 
 */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Client.sendMessage("Exit");
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed
/**
 * 进入聊天消息栏目
 * @param evt 
 */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        channel=0;
        jLabel1.setText("消息");
        jPanel1.removeAll();
        jButton7.setVisible(false);
        Client.sendMessage("Fetch " + UserManager.getClient().getID());
        MessageManager.clearCache();
        updateMessage();
    }//GEN-LAST:event_jButton2ActionPerformed
/**
 * 进入联系人栏目
 * @param evt 
 */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        channel=1;
        jLabel1.setText("联系人");
        jPanel1.removeAll();
        jButton7.setVisible(true);
        Client.sendMessage("Get AddressBook "+UserManager.getClient().getID());
        MessageManager.clearCache();
        updateAddressBook();
    }//GEN-LAST:event_jButton3ActionPerformed
/**
 * 进入群聊栏目（该栏目管理所有的群聊）。
 * @param evt 
 */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        channel=2;
        jLabel1.setText("群聊");
        jPanel1.removeAll();
        jButton7.setVisible(true);
        Client.sendMessage("Get AddressBook "+UserManager.getClient().getID());
        MessageManager.clearCache();
        updateGroup();
               
    }//GEN-LAST:event_jButton5ActionPerformed
/**
 * JList的鼠标点击事件。点击后应当在右侧显示合适的界面。
 * @param evt 
 */
    private void jListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMouseClicked
        int i=jList.getSelectedIndex();
        if (i<0) return;
        switch(channel){
            case 0: chatPanel=new ChatPanel(model.get(i));
                    jPanel1.removeAll();
                    jPanel1.add(chatPanel);
                    jPanel1.updateUI();
                    chatPanel.setVisible(true);
                    break;
            case 1: UserPanel userPanel=new UserPanel((User)model.get(i));
                    chatPanel=null;
                    jPanel1.removeAll();
                    jPanel1.add(userPanel);
                    jPanel1.updateUI();
                    userPanel.setVisible(true);
                    break;
            case 2: chatPanel=null;
                    GroupPanel groupPanel=new GroupPanel((Group)model.get(i));
                    jPanel1.removeAll();
                    jPanel1.add(groupPanel);
                    jPanel1.updateUI();
                    groupPanel.setVisible(true);
                    break;
            default:
        }
    }//GEN-LAST:event_jListMouseClicked
/**
 * 进入系统消息栏目
 * @param evt 
 */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Client.sendMessage("Fetch " + UserManager.getClient().getID());
        MessageManager.clearCache();
        SystemMessageFrame.getInstance().setVisible(true);
        SystemMessageFrame.getInstance().update();
    }//GEN-LAST:event_jButton6ActionPerformed
/**
 * 建群或加好友
 * @param evt 
 */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (channel == 2) {
            String name = JOptionPane.showInputDialog(this, "请输入群名称：", "新建群聊", JOptionPane.QUESTION_MESSAGE);
            if (name!=null){
                Client.sendMessage("NewGroup " + name);
            }           
        } else if (channel == 1) {
            String ID = JOptionPane.showInputDialog(this, "请输入对方账号以添加好友：", "添加好友", JOptionPane.QUESTION_MESSAGE);
            try {
                int x = Integer.parseInt(ID);
                if (!ID.equals(UserManager.getClient().getID())){
                    Client.sendMessage("Message 2 " + UserManager.getClient().getID() + " " + ID + " Invite");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "您输入的账号不存在", "错误", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<Chatter> jList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
